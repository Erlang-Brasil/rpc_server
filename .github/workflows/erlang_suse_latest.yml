name: Erlang CI on Ubuntu

on: [push, pull_request]

permissions:
  contents: read # Necessário para actions/checkout

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      # Adicione a linha abaixo para evitar que a CI pare se uma versão falhar
      fail-fast: false
      matrix:
        otp: ['28.0', '27.0', '26.2.2']
    env:
      REBAR3_VERSION: '3.22.1'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up BEAM
        uses: erlef/setup-beam@v1
        id: setup-beam
        with:
          otp-version: ${{ matrix.otp }}
          rebar3-version: ${{ env.REBAR3_VERSION }}

      - name: Restore Hex package cache
        uses: actions/cache@v4
        id: hex-cache
        with:
          path: |
            ~/.cache/rebar3/hex
            ~/.hex
          key: ${{ runner.os }}-hex-${{ steps.setup-beam.outputs.otp-version }}-${{ hashFiles('**/rebar.lock') }}
          restore-keys: |
            ${{ runner.os }}-hex-${{ steps.setup-beam.outputs.otp-version }}-

      - name: Restore Dialyzer PLT cache
        uses: actions/cache@v4
        id: plt-cache
        with:
          path: |
            ~/.cache/rebar3/plt_*.ets
            _build/default/rebar3_*.plt
          key: ${{ runner.os }}-plt-${{ steps.setup-beam.outputs.otp-version }}-${{ hashFiles('**/rebar.lock', '**/rebar.config') }}
          restore-keys: |
            ${{ runner.os }}-plt-${{ steps.setup-beam.outputs.otp-version }}-

      # Opcional: Cache para o diretório _build
      # - name: Restore _build cache
      #   uses: actions/cache@v4
      #   id: build-cache
      #   with:
      #     path: _build
      #     key: ${{ runner.os }}-build-${{ steps.setup-beam.outputs.otp-version }}-${{ hashFiles('**/rebar.lock', '**/rebar.config', 'apps/**/src/**/*.erl', 'src/**/*.erl') }}
      #   restore-keys: |
      #     ${{ runner.os }}-build-${{ steps.setup-beam.outputs.otp-version }}-

      - name: Install Dependencies
        if: steps.hex-cache.outputs.cache-hit != 'true'
        run: rebar3 deps

      - name: Compile
        run: rebar3 compile

      - name: Run Dialyzer
        run: rebar3 dialyzer

      # - name: Run Linter (rebar3_lint with Elvis)
      #   run: rebar3 lint

      - name: Run EUnit tests with coverage
        run: rebar3 eunit --cover

      - name: Run Common Test suites with coverage
        run: rebar3 ct --cover

      - name: Generate Codecov JSON report (using rebar3_codecov)
        if: always()
        run: |
          rebar3 as test codecov analyze || echo "Codecov analysis failed but continuing"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success() && matrix.otp == '27.0'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: _build/test/codecov/codecov.json
          fail_ci_if_error: true
          verbose: true

      - name: Upload test logs and HTML coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-otp-${{ matrix.otp }}
          path: |
            _build/test/logs/
            _build/test/cover/
          if-no-files-found: warn
          retention-days: 7